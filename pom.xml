<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.zeppelin</groupId>
    <artifactId>zeppelin</artifactId>
    <version>0.6.1</version>
  </parent>
  
  <groupId>org.apache.zeppelin</groupId>
  <artifactId>zeppelin-quantumviz</artifactId>
  <version>0.6.1</version>
  <name>zeppelin-quantumviz</name>
  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <distributionManagement>
	  <repository>
	    <id>ssh-repository</id>
      	<url>scp://bigbang.cityzendata.net:/data/repos/ansible-staging/vendors</url>
	  </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>zeppelin-interpreter</artifactId>
      <version>0.6.1</version>
      <scope>provided</scope>
    </dependency> 
    
    <dependency>
	  <groupId>org.apache.maven.wagon</groupId>
	  <artifactId>wagon-ssh-external</artifactId>
	  <version>2.10</version>
	</dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
	  <groupId>org.json</groupId>
	  <artifactId>json</artifactId>
	  <version>20160212</version>
    </dependency>
  </dependencies>

  <build>
     
	<extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.8</version>
      </extension>
    </extensions>
    
    <plugins>
    
    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>etc/config/local.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>            
        <executions> 
          <execution> 
            <id>enforce</id> 
            <phase>none</phase> 
          </execution>
        </executions>
      </plugin>
      
      <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>wagon-maven-plugin</artifactId>
      <version>1.0</version>
      <executions>
        <execution>
          <id>upload-javadoc</id>
          <phase>deploy</phase>
          <goals>
            <goal>sshexec</goal>
          </goals>
          <configuration>
            <commands>
              <command>rm /data/repos/ansible-staging/vendors/org/apache/zeppelin/zeppelin-quantumviz/maven-metadata.xml</command>
            </commands>
            <privateKey>/Users/ahebert/Documents/mountFD/id_rsa</privateKey>
        <filePermissions>664</filePermissions>
        <directoryPermissions>775</directoryPermissions>
            <fromDir>local.dir</fromDir>
            <includes>target/*.jar</includes>
            <excludes>*.xml</excludes>
            <url>${sshUrl}</url>
            <toDir>remote.dir</toDir>
          </configuration>
          </execution>
        </executions>
        </plugin>
      
     <plugin> <artifactId>maven-assembly-plugin</artifactId> <version>2.6</version> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <!-- this is used for inheritance merges --> <phase>package</phase> <!-- bind to the packaging phase --> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin>
    </plugins>
  </build>
  
</project>
